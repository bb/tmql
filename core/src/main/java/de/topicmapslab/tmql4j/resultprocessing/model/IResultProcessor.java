/*
 * TMQL4J - Javabased TMQL Engine
 * 
 * Copyright: Copyright 2010 Topic Maps Lab, University of Leipzig. http://www.topicmapslab.de/    
 * License:   Apache License, Version 2.0 http://www.apache.org/licenses/LICENSE-2.0.html
 * 
 * @author Sven Krosse
 * @email krosse@informatik.uni-leipzig.de
 *
 */
package de.topicmapslab.tmql4j.resultprocessing.model;

import de.topicmapslab.tmql4j.common.core.exception.TMQLRuntimeException;
import de.topicmapslab.tmql4j.interpreter.core.base.QueryMatches;

/**
 * Interface definition of a result processor. A result processor transform the
 * tuple sequences generated by the interpretation task to a {@link IResultSet}.
 * 
 * @author Sven Krosse
 * @email krosse@informatik.uni-leipzig.de
 * 
 */
public interface IResultProcessor {

	/**
	 * Method returns the result of the result processor. The result represents
	 * the generated {@link IResultSet} containing all results of querying
	 * process.
	 * 
	 * @param <T>
	 *            the type of contained results
	 * @return the generated result set
	 */
	public <T extends IResultSet<?>> T getResultSet();

	/**
	 * Method starts the internal execution. The result processor will transform
	 * the querying results to a {@link IResultSet}.
	 * 
	 * @param matches
	 *            the querying results
	 * @throws TMQLRuntimeException
	 *             thrown if {@link IResultSet} class can not be instantiate or
	 *             a error happened during transformation task
	 */
	public void proceed(QueryMatches matches) throws TMQLRuntimeException;

}
