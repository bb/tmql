=== Results ===

The results of a querying process are represented similar to the Java Database Connectivity ( JDBC ) 'ResultSet'. The result processor transform the sequence of tuples generated by the interpretation module to an instance of 'IResultSet'. The type of the result set will be different dependent from the property value and the expression type. The user can add its own implementation of a 'IResultSet' to add specific functions or represent the data in the desired way. 

The tmql4j engine will automatically change the implementation of the result set which is compatible to the result types. If the query returns XML content the engine will change the result set class to an implementation of 'XMLResult'. If the interpreter returns CTM content, the result set will be an instance of 'CTMResult'.

The 'IResultSet' interface define a method to check the type of the result set based on an internal enumeration.

--------------------------------------
1:	IResultSet set = query.getResults();
2:	return set.getResultType();
3:	
4:	=> "TMAPI" or "XML" or "CTM"
--------------------------------------

==== Using an IResultSet ====

The 'IResultSet' is designed similar to the JDBC 'ResultSet' and can be used in a similar way. The result set provides a functionality to iterate over the contained results represented by the interface 'IResult'. An instance of 'IResult' represents exactly one tuple of the interpretation result and contains a set of literals and items representing the tuple items. The 'IResult' class can also be used by iteration like the 'IResultSet'.

-------------------------------------
1:	IResultSet<?> set = query.getResults();
2:		for ( IResult result : set ){
3:			for ( Object item : result ){
4:				...
5:			}
6:	}
-------------------------------------

=====================================
In line 1 we extract the result set from the query instance 'query' using the method 'getResults'. The wildcard '?' is used because we don't know the 'IResult' class contained by the result set. Because of the fact that 'IResult' and 'IResultSet' are extending the Java 'Iterable' interface, we simply can iterate over the contained elements using the for-loop as we see in line 2 and 3.
=====================================

===== TMAPI-Results =====

The base result type is a TMAPI result set containing plain java objects and TMAPI objects representing the querying results. This result type will be generated by the result processor during the querying process of each expression type except flwr-expression return XML or CTM contents.

===== CTM-Results =====

Using the flwr-expression of the current language draft a querying can returns a set of CTM content. This special result type will be handle by an instance of 'CTMResult' and 'CTMFragment'. The special implementation of 'IResult' contains additional methods which can be important to handle the internal CTM content in an easy way.

The method 'resultsAsTopicMap()' returns a topic map construct representing all CTM fragments as one topic map instance. Each fragment will be parsed by a CTM reader and will be merged in the topic map instance. The overall result will be returned by this method.

The method 'resultsAsMergedCTM()' returns a topic map serialization containing all CTM fragments of the result set. Each fragment will be parsed by a CTM reader and will be merged in the topic map instance which will be serialized by a CTM writer.

===== XML-Results =====

Using the flwr-expression of the current language draft a querying can returns a set of XML content. This special result type will be handle by an instance of 'XMLResult' and 'XMLFragment'. The special implementation of 'IResult' contains additional methods which can be important to handle the internal XML content in an easy way.

The method 'toXMLDocument()' returns an 'org.w3c.dom.Document' representing the whole XML result. The document will be created by adding all XML fragments to one content. If the result contains more than one fragment a additional root node 'xml-root' will be added.

The method 'resultsAsMergedXML()' return a string representing the whole XML result. The document content will be returned as a string.

==== Creating your own Result Set ====

The tmql4j engine provides the functionality to insert own implementations of a result set. The implementation only has to inherit from the 'IResultSet' interface and has to be registered using the property handler of the runtime container and the property 'result-set-implementation-class'.